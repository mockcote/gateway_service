# 서버 포트 설정
server:
  port: 8080

backend:
  host: 10.0.3.2

frontend:
  host: localhost

spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:3000" # 프론트엔드 도메인
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
            allowedHeaders:
              - "*"  # 모든 헤더 허용
            allowCredentials: true  # 쿠키 허용

      # 라우팅 규칙 정의
      routes:
        # 인증 관련 요청 라우팅 (/auth/**)
        - id: auth-route
          uri: http://${backend.host}:8081
          predicates:
            - Path=/auth/**
          filters:
            - RewriteResponseHeader=Set-Cookie,(.*),$1; SameSite=None; Secure
            - PreserveHostHeader

        # 사용자 회원가입 요청 라우팅 (/user/join/**)
        - id: user-join-route
          uri: http://${backend.host}:8081
          predicates:
            - Path=/user/join/**

        # 사용자 조회 요청 라우팅 (/user/find/all)
        - id: user-find-route
          uri: http://${backend.host}:8081
          predicates:
            - Path=/user/find/all

        # 사용자 관련 요청 라우팅 (/user/**)
        - id: user-route
          uri: http://${backend.host}:8081
          predicates:
            - Path=/user/**
          filters:
            - JwtAuthenticationFilter

        # 테스트 관련 요청 라우팅 (/test/**)
        - id: test-route
          uri: http://${backend.host}:8082
          predicates:
            - Path=/test/**
          filters:
            - JwtAuthenticationFilter

        # 통계 관련 요청 라우팅 (/stats/**)
        - id: stat-route
          uri: http://${backend.host}:8082
          predicates:
            - Path=/stats/**

        # 문제 관련 요청 라우팅 (/problems/**)
        - id: problem-route
          uri: http://${backend.host}:8083
          predicates:
            - Path=/problems/**
          filters:
            - StripPrefix=1

        # 문제풀이 관련 요청 라우팅 (/submissions/**)
        - id: time-route
          uri: http://${backend.host}:8084
          predicates:
            - Path=/submissions/**
          filters:
            - JwtAuthenticationFilter

      # 모든 라우트에 적용될 기본 필터
      default-filters:
        # 중복된 CORS 헤더 제거
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE

  web:
    resources:
      add-mappings: false

# JWT 설정
jwt:
  secret: 7nepDBvcmydW2xwfhL0Dk9qiPWq9pYtGKVQoncHP8Ok=
  expiration: 3600000  # 토큰 만료 시간: 1시간 (밀리초 단위)

# 로깅 설정
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    com.mockcote: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    io.jsonwebtoken: DEBUG
    org.springframework.http.server.reactive: DEBUG
    reactor.netty: INFO
    io.netty: INFO
